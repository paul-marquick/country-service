@page "/country/add"

@using CountryService.BlazorAdminApp.HttpClients
@using CountryService.BlazorAdminApp.Problems
@using CountryService.Dtos.Country    
@using System.Threading
@using Microsoft.Extensions.Logging
@inject ICountryHttpClient countryHttpClient
@inject ILogger<Add> logger
@inject NavigationManager navigationManager
@inject ToastService toastService

<PageTitle>Add Country</PageTitle>

<h1>Add Country</h1>

<EditForm EditContext="editContext" OnValidSubmit="HandleValidSubmit" FormName="AddCountry">

    <DataAnnotationsValidator />

    <div class="mb-3 col-md-6">
        <label for="@Model.Iso2" class="form-label">@Resource.Iso2</label>
        <InputText class="form-control" @bind-Value="@Model.Iso2" />
        <ValidationMessage For="() => Model!.Iso2" />
    </div>

    <div class="mb-3 col-md-6">
        <label for="@Model.Iso3" class="form-label">@Resource.Iso3</label>
        <InputText class="form-control" @bind-Value="@Model.Iso3" />
        <ValidationMessage For="() => Model!.Iso3" />
    </div>

    <div class="mb-3 col-md-6">
        <label for="@Model.IsoNumber" class="form-label">@Resource.IsoNumber</label>
        <InputNumber class="form-control" @bind-Value="@Model.IsoNumber" />
        <ValidationMessage For="() => Model!.IsoNumber" />
    </div>

    <div class="mb-3 col-md-6">
        <label for="@Model.Name" class="form-label">@Resource.Name</label>
        <InputText class="form-control" @bind-Value="@Model.Name" />
        <ValidationMessage For="() => Model!.Name" />
    </div>

    <div class="mb-3 col-md-6">
        <label for="@Model.CallingCode" class="form-label">@Resource.CallingCode</label>
        <InputText class="form-control" @bind-Value="@Model.CallingCode" />
    </div>

    <div class="btn-group">

        <button type="submit" class="btn btn-success">
            <i class="bi bi-floppy"></i>
            Save
        </button>

        <a class="btn btn-secondary" onclick="history.back();">
            <i class="bi bi-arrow-left"></i>
            Back
        </a>

    </div>

</EditForm>

@code {
    private EditContext editContext = default!;
    private Country Model = new(); 
    private ValidationMessageStore validationMessageStore = default!;

    protected override void OnInitialized()
    {
        editContext = new(Model);
        validationMessageStore = new(editContext);
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            await countryHttpClient.PostCountryAsync(Model);

            toastService.Notify(new(ToastType.Success, "Country saved."));

            navigationManager.NavigateTo("country");
        }
        catch (ValidationProblemDetailsException validationProblemDetailsException)
        {
            ValidationProblemDetailsExceptionHandler.HandleValidationProblemDetailsException(validationProblemDetailsException, validationMessageStore, toastService);
        }
    }
}
